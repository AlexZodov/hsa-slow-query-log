input {
  file {
    path => "/var/log/mysql/mysql-slow-query.log"  # Path to your MySQL slow query log
    start_position => "beginning"  # Start reading at the beginning of the file
    sincedb_path => "/dev/null"  # Disable sincedb for testing (remove in production)
    codec => multiline {
      pattern => "^# Time:"  # This pattern indicates the start of a new log entry
      negate => true
      what => "previous"  # Combine lines until a new entry is detected
    }
  }
}

filter {
  grok {
    match => {
      "message" => "^# Time: %{TIMESTAMP_ISO8601:timestamp}\n# User@Host: %{GREEDYDATA:user_host}\n# Query_time: %{NUMBER:query_time:float}  Lock_time: %{NUMBER:lock_time:float} Rows_sent: %{NUMBER:rows_sent:int}  Rows_examined: %{NUMBER:rows_examined:int}\nSET timestamp=%{NUMBER:timestamp_value};\n\/\* ApplicationName=%{GREEDYDATA:application_name} \*\/ %{GREEDYDATA:sql_query};"
    }
  }
  # Remove the original message to avoid clutter
  mutate {
    remove_field => ["message"]
  }
}

output {
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
#     data_stream => false
    index => "mysql-slow-queries-%{+YYYY.MM.dd}"
  }
  stdout { codec => rubydebug }  # For debugging, to see the output in the console
}
